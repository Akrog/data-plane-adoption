- name: deploy podified Nova conductors, scheduler, metadata, API, and Compute-Ironic
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc patch openstackcontrolplane openstack -n openstack --type=merge --patch '
    spec:
      nova:
        enabled: true
        apiOverride:
          route: {}
        template:
          secret: osp-secret
          apiServiceTemplate:
            override:
              service:
                internal:
                  metadata:
                    annotations:
                      metallb.universe.tf/address-pool: internalapi
                      metallb.universe.tf/allow-shared-ip: internalapi
                      metallb.universe.tf/loadBalancerIPs: 172.17.0.80
                  spec:
                    type: LoadBalancer
            customServiceConfig: |
              [workarounds]
              disable_compute_service_check_for_ffu=true
          metadataServiceTemplate:
            enabled: true # deploy single nova metadata on the top level
            override:
              service:
                metadata:
                  annotations:
                    metallb.universe.tf/address-pool: internalapi
                    metallb.universe.tf/allow-shared-ip: internalapi
                    metallb.universe.tf/loadBalancerIPs: 172.17.0.80
                spec:
                  type: LoadBalancer
            customServiceConfig: |
              [workarounds]
              disable_compute_service_check_for_ffu=true
          schedulerServiceTemplate:
            customServiceConfig: |
              [workarounds]
              disable_compute_service_check_for_ffu=true
          cellTemplates:
            cell0:
              conductorServiceTemplate:
                customServiceConfig: |
                  [workarounds]
                  disable_compute_service_check_for_ffu=true
            cell1:
              conductorServiceTemplate:
                customServiceConfig: |
                  [workarounds]
                  disable_compute_service_check_for_ffu=true
              novaComputeTemplates:
                standalone:
                  customServiceConfig: |
                    [DEFAULT]
                    host = standalone.localdomain
                    [workarounds]
                    disable_compute_service_check_for_ffu=true
                  replicas: 1
                  resources: {}
                  computeDriver: ironic.IronicDriver
                  networkAttachments:
                    - internalapi
    '

- name: wait for Nova control plane services' CRs to become ready
  ansible.builtin.include_tasks:
    file: wait.yaml

- name: Remove FFU workarounds
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc patch openstackcontrolplane openstack -n openstack --type=merge --patch '
    spec:
      nova:
        template:
          apiServiceTemplate:
            customServiceConfig: |
              [workarounds]
              disable_compute_service_check_for_ffu=false
          metadataServiceTemplate:
            customServiceConfig: |
              [workarounds]
              disable_compute_service_check_for_ffu=false
          schedulerServiceTemplate:
            customServiceConfig: |
              [workarounds]
              disable_compute_service_check_for_ffu=false
          cellTemplates:
            cell0:
              conductorServiceTemplate:
                customServiceConfig: |
                  [workarounds]
                  disable_compute_service_check_for_ffu=false
            cell1:
              conductorServiceTemplate:
                customServiceConfig: |
                  [workarounds]
                  disable_compute_service_check_for_ffu=false
              novaComputeTemplates:
                standalone:
                  customServiceConfig: |
                    [DEFAULT]
                    host = standalone.localdomain
                    [workarounds]
                    disable_compute_service_check_for_ffu=false
    '

- name: wait for Nova control plane services' CRs to become ready
  ansible.builtin.include_tasks:
    file: wait.yaml

- name: wait for Nova control plane services' CRs to become ready
  ansible.builtin.include_tasks:
    file: check_endpoints.yaml

- name: Provision new instance on ironic
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    alias openstack="oc exec -t openstackclient -- openstack"

    function wait_server_active() {
      local server_name=$1
      local retries=100
      local counter=0
      set +e
      until ${BASH_ALIASES[openstack]} server show ${server_name} -f value -c status | grep "ACTIVE"; do
        if [[ "$counter" -eq "$retries" ]]; then
          echo "ERROR: Timeout. Server: \"${server_name}\" did not reach state: \"ACTIVE\""
          ${BASH_ALIASES[openstack]} server show ${server_name}
          exit 1
        fi
        echo "Waiting for image \"${server_name}\" to reach state \"ACTIVE\""
        sleep 10
        ((counter++))
      done
      set -e
    }

    ${BASH_ALIASES[openstack]} server create baremetal-test-post-adoption --flavor baremetal --image Fedora-Cloud-Base-38 --nic net-id=provisioning
    wait_server_active baremetal-test-post-adoption

    # Check instance status and network connectivity
    ${BASH_ALIASES[openstack]} server show baremetal-test-post-adoption
    ping -c 4 $(${BASH_ALIASES[openstack]} server show baremetal-test-post-adoption -f json -c addresses | jq -r .addresses.provisioning[0])
