- name: deploy podified Keystone
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc patch openstackcontrolplane openstack --type=merge --patch '
    spec:
      keystone:
        enabled: true
        databaseInstance: openstack
        secret: osp-secret
        externalEndpoints:
        - endpoint: internal
          ipAddressPool: internalapi
          loadBalancerIPs:
          - 172.17.0.80
    '

- name: wait for Keystone to start up
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc get pod --selector=service=keystone -o jsonpath='{.items[0].status.phase}{"\n"}' | grep Running
  register: keystone_running_result
  until: keystone_running_result is success
  retries: 60
  delay: 2

- name: check that Keystone is reachable and its endpoints are defined
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}

    alias openstack="oc exec -t openstackclient -- openstack"

    openstack endpoint list | grep keystone
  register: keystone_responding_result
  until: keystone_responding_result is success
  retries: 15
  delay: 2

- name: clean up services and endpoints
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}

    alias openstack="oc exec -t openstackclient -- openstack"

    openstack endpoint list | grep keystone | awk '/admin/{ print $2; }' | xargs ${BASH_ALIASES[openstack]} endpoint delete || true

    for service in cinderv3 glance neutron nova placement swift; do
      openstack service list | awk "/ $service /{ print \$2; }" | xargs ${BASH_ALIASES[openstack]} service delete || true
    done
